# 24 Mbps
import numpy as np

###################
#AlexNet
local_computation_time= [0.0116, 0.0086, 76.1784, 69.3808, 78.9556, 71.4789, 79.3738, 73.4077, 70.3147, 65.8686, 73.5054, 79.9724, 65.8498, 86.1647, 77.1557, 68.9395, 69.2414, 63.6264, 73.6441, 75.5049, 70.0352]
network_delay= [793.0359, 630.5047, 280.4772, 282.3545, 285.6011, 286.4656, 288.1051, 289.0933, 288.5371, 290.4738, 292.0746, 294.4182, 292.0422, 293.7976, 292.2668, 291.9039, 293.8691, 294.3894, 295.8652, 295.7572, 296.4308]
remote_computation_time= [38.267, 30.2358, 27.74, 27.1045, 28.3991, 27.3928, 28.2368, 27.2134, 27.6105, 29.2641, 26.5634, 26.4097, 26.5134, 28.1994, 26.7874, 26.2081, 27.0002, 27.4521, 29.9435, 26.0556, 28.7777]
total= [831.3145, 660.7491, 384.3956, 378.8398, 392.9558, 385.3373, 395.7157, 389.7144, 386.4623, 385.6065, 392.1434, 400.8003, 384.4054, 408.1617, 396.2099, 387.0515, 390.1107, 385.4679, 399.4528, 397.3177, 395.2437]
pow= [1764.8704, 1786.1964, 2718.0357, 2117.2778, 2717.8929, 2113.9, 2696.4375, 2115.1, 2691.1333, 2697.4667, 2692.4, 2715.375, 2124.0652, 2689.9333, 2116.5978, 2683.5, 2691.2, 2692.4333, 2798.9062, 2668.9375, 2135.8667]

l_total = []
for i in range(1, len(total)):
    l_total.append(np.average(total[:i]))
print("total1=", l_total[-1])

for i in range(len(pow)):
    pow[i] = round(pow[i] * local_computation_time[i] * 0.001 * 0.001 + network_delay[i] * 0.001 * 0.5, 4)

l_pow = []
for i in range(1, len(pow)):
    l_pow.append(np.average(pow[:i]))

print("pow1=", l_pow)



###################
###################
#VGG
local_computation_time= [0.0131, 0.0084, 0.0078, 0.0087, 0.0082, 0.0085, 0.0087, 0.0083, 0.008, 0.008, 0.0078, 0.0088, 0.008, 0.0075, 0.0085, 0.0091, 0.0085, 0.0085, 0.0129, 0.0088, 0.0082]
network_delay= [579.0641, 665.419, 588.53, 592.1713, 595.4463, 594.906, 595.6352, 603.7454, 603.776, 603.5006, 603.58, 601.1255, 600.7302, 600.5439, 598.9373, 600.5213, 598.5784, 598.217, 596.6766, 594.35, 594.264]
remote_computation_time= [137.3507, 141.8357, 150.7603, 140.5488, 163.2998, 146.4629, 143.8204, 128.538, 146.6245, 138.5631, 136.4305, 133.3097, 157.0324, 149.0098, 143.2, 137.7108, 131.3273, 121.3983, 134.1851, 157.1096, 160.2926]
total= [716.4279, 807.2631, 739.2981, 732.7288, 758.7543, 741.3774, 739.4643, 732.2917, 750.4085, 742.0717, 740.0183, 734.444, 757.7706, 749.5612, 742.1458, 738.2412, 729.9142, 719.6238, 730.8746, 751.4684, 754.5648]
pow= [1933.069, 1922.9194, 1931.1667, 1937.0, 1968.475, 1928.0, 1963.7083, 1929.9, 1928.0, 1964.2203, 1945.15, 1966.4746, 1930.5333, 1931.8167, 1929.9677, 1932.4333, 1966.1695, 1932.4138, 1967.7712, 1936.8667, 1933.0667]

l_total = []
for i in range(1, len(total)):
    l_total.append(np.average(total[:i]))
print("total2=", l_total[-1])

for i in range(len(pow)):
    pow[i] = round(pow[i] * local_computation_time[i] * 0.001 * 0.001 + network_delay[i] * 0.001 * 0.5, 4)

l_pow = []
for i in range(1, len(pow)):
    l_pow.append(np.average(pow[:i]))

print("pow2=", l_pow[-1])

###################
###################
#RestNet
local_computation_time= [0.0124, 0.0084, 0.0088, 0.0088, 0.0081, 0.0149, 0.0091, 0.0076, 0.0079, 0.0079, 0.0082, 0.0082, 0.0079, 0.0081, 0.0175, 0.0077, 0.008, 0.008, 0.0102, 0.0086, 0.0081]
network_delay= [644.746, 687.9634, 573.6182, 568.1851, 562.5366, 561.9091, 557.7338, 553.2245, 550.3499, 551.1413, 547.0831, 549.0052, 549.6489, 549.9768, 552.084, 551.6303, 555.0932, 550.4519, 551.5845, 551.2281, 551.2457]
remote_computation_time= [56.9199, 54.4144, 44.5117, 44.6711, 47.4135, 45.1095, 56.7378, 46.2164, 44.6007, 60.3248, 44.2725, 43.6247, 45.4692, 45.5499, 48.0948, 44.2374, 46.0125, 43.3954, 44.9789, 43.5877, 45.9694]
total= [701.6783, 742.3862, 618.1387, 612.865, 609.9582, 607.0335, 614.4807, 599.4485, 594.9585, 611.474, 591.3638, 592.6381, 595.126, 595.5348, 600.1963, 595.8754, 601.1137, 593.8553, 596.5736, 594.8244, 597.2232]
pow= [1778.3478, 1788.463, 1789.6863, 1794.0217, 1804.4762, 1813.6818, 1815.4545, 1810.2727, 1806.0588, 1812.8864, 1845.2596, 1809.3864, 1808.1087, 1805.2115, 1817.1818, 1836.7692, 1803.1522, 1839.9688, 1795.5, 1833.01, 1793.8182]

l_total = []
for i in range(1, len(total)):
    l_total.append(np.average(total[:i]))
print("total3=", l_total[-1])

for i in range(len(pow)):
    pow[i] = round(pow[i] * local_computation_time[i] * 0.001 * 0.001 + network_delay[i] * 0.001 * 0.5, 4)

l_pow = []
for i in range(1, len(pow)):
    l_pow.append(np.average(pow[:i]))

print("pow3=", l_pow[-1])

###################

b = [5.522317069772688, 9.575558679172742, 8.902124251054572]
c = [3, 4, 9]

print("avg_t = ", (426.61 + 742.7 + 613)/3)
print("avg_p = ", (0.334090000 + 0.300409 + 0.282995)/3)
print(len(local_computation_time))


###################
#AlexNet
local_computation_time = [0.0115, 55.5207, 68.7944, 56.481, 167.5271, 278.3468, 278.429, 264.2367, 264.154, 267.2329, 267.3992, 280.523, 264.2154, 263.0059, 254.8858, 259.0104, 242.6684, 265.9436, 251.5283, 265.5963, 251.1162]
network_delay = [1584.0475, 575.6822, 623.5381, 646.1274, 239.2124, 142.7872, 149.1119, 154.7868, 160.0692, 165.0088, 169.0607, 173.4006, 176.5159, 179.6612, 182.8098, 185.6311, 188.867, 191.5832, 193.127, 195.4592, 197.7098]
remote_computation_time = [39.0758, 41.084, 26.2728, 27.572, 15.8475, 6.0458, 6.1352, 6.9405, 7.1852, 11.6387, 11.2422, 11.1075, 11.3699, 12.1338, 11.7545, 11.5138, 10.6601, 11.4873, 10.5254, 11.0314, 11.4593]
total = [1623.1348, 672.2869, 718.6053, 730.1804, 422.587, 427.1798, 433.6761, 425.964, 431.4084, 443.8804, 447.7021, 465.0311, 452.1012, 454.8009, 449.4501, 456.1553, 442.1955, 469.0141, 455.1807, 472.0869, 460.2853]
pow= [1786.4085, 2696.5645, 2333.8456, 2830.5972, 3053.7636, 4844.9211, 3026.8519, 4798.7368, 4790.6316, 2966.287, 4705.125, 4708.6667, 2996.2091, 5314.3571, 5337.1905, 5326.675, 3238.4732, 5337.119, 5286.1905, 3299.4561, 5211.875]
l_total = []
for i in range(1, len(total)):
    l_total.append(np.average(total[:i]))
print("total1=", l_total[-1])

for i in range(len(pow)):
    pow[i] = round(pow[i] * local_computation_time[i] * 0.001 * 0.001 + network_delay[i] * 0.001 * 0.5, 4)

l_pow = []
for i in range(1, len(pow)):
    l_pow.append(np.average(pow[:i]))

print("pow1=", l_pow[-1])

###################
###################
#VGG
local_computation_time= [0.0112, 0.011, 0.0055, 0.0049, 0.0072, 0.0046, 0.0034, 0.0034, 0.0036, 0.0033, 0.0035, 0.0034, 0.0036, 0.0033, 0.0033, 0.0034, 0.0034, 0.0035, 0.0033, 0.0035, 0.0036]
network_delay= [1155.8602, 1157.8371, 1136.4054, 1131.1855, 996.1821, 958.418, 955.3442, 952.036, 949.5323, 947.5228, 947.87, 945.0487, 945.7897, 943.3812, 942.6374, 942.4341, 941.9013, 940.769, 943.3113, 939.7258, 939.2168]
remote_computation_time= [160.9046, 153.0524, 115.1163, 146.7234, 144.0089, 154.6311, 150.2224, 150.9034, 139.6098, 120.6402, 156.5696, 144.2563, 163.7649, 152.2084, 130.6985, 143.2188, 139.7117, 127.0838, 154.0284, 165.4174, 152.4763]
total= [1316.776, 1310.9005, 1251.5272, 1277.9138, 1140.1982, 1113.0537, 1105.57, 1102.9428, 1089.1457, 1068.1663, 1104.4431, 1089.3084, 1109.5582, 1095.5929, 1073.3392, 1085.6563, 1081.6164, 1067.8563, 1097.343, 1105.1467, 1091.6967]
pow= [1934.0727, 1958.0989, 2127.5656, 2119.1172, 2272.3136, 2222.7586, 3703.2951, 3721.7705, 3719.6378, 3730.178, 3728.959, 3747.6633, 3732.3607, 3788.4417, 3739.0561, 3794.5167, 3745.725, 3802.678, 3753.3737, 3810.5984, 3759.3833]

l_total = []
for i in range(1, len(total)):
    l_total.append(np.average(total[:i]))
print("total2=", l_total[-1])

for i in range(len(pow)):
    pow[i] = round(pow[i] * local_computation_time[i] * 0.001 * 0.001 + network_delay[i] * 0.001 * 0.5, 4)

l_pow = []
for i in range(1, len(pow)):
    l_pow.append(np.average(pow[:i]))

print("pow2=", l_pow[-1])

###################
###################
#RestNet
local_computation_time= [0.0098, 0.0074, 0.0051, 0.005, 0.005, 0.0035, 0.0035, 0.0033, 0.0036, 0.0034, 0.0036, 0.0034, 0.0034, 0.0036, 0.0035, 0.0034, 0.0034, 0.0035, 0.0037, 0.0031, 0.0034]
network_delay= [1294.3979, 1146.77, 1115.6704, 1099.2902, 967.3601, 930.2732, 927.0613, 924.829, 923.6113, 920.57, 918.1909, 917.511, 916.5581, 916.4134, 916.3202, 914.9874, 912.8841, 913.3168, 910.7499, 912.0173, 912.3014]
remote_computation_time= [52.8907, 53.3159, 56.32, 51.0728, 46.8971, 60.2353, 43.9827, 47.1445, 45.2352, 44.5956, 42.9172, 46.1812, 45.5001, 44.8285, 43.7273, 52.9425, 46.2011, 45.2727, 47.7701, 48.5869, 47.2943]
total= [1347.2984, 1200.0933, 1171.9955, 1150.368, 1014.2622, 990.512, 971.0475, 971.9768, 968.8501, 965.169, 961.1117, 963.6956, 962.0616, 961.2455, 960.051, 967.9333, 959.0886, 958.593, 958.5237, 960.6073, 959.5991]
pow= [1767.5918, 1810.03, 1990.4273, 2066.9213, 2104.2449, 3566.736, 3532.6078, 3529.6149, 3545.1, 3530.23, 3539.3391, 3540.87, 3534.78, 3513.733, 3596.04, 3514.092, 3591.09, 3519.5575, 3590.29, 3518.83, 3555.1552]
l_total = []
for i in range(1, len(total)):
    l_total.append(np.average(total[:i]))
print("total3=", l_total[-1])

for i in range(len(pow)):
    pow[i] = round(pow[i] * local_computation_time[i] * 0.001 * 0.001 + network_delay[i] * 0.001 * 0.5, 4)

l_pow = []
for i in range(1, len(pow)):
    l_pow.append(np.average(pow[:i]))

print("pow3=", l_pow[-1])

###################
b = [0.5766521234487231, 5.797882069368748, 5.625465807182529]
c = [1, 4, 11]

print("avg_t = ", (544.61 + 1134.7 + 1018)/3)
print("avg_p = ", (1.077 + 0.494 + 0.48498)/3)